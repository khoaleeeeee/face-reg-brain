{"ast":null,"code":"var _jsxFileName = \"/Users/Khoa/Documents/face-reg-brain/src/App.js\";\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '14959ae3c99746898e2df219747819c0'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 300\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://locahost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              user: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSingedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSingedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSingedIn: false,\n      user: {\n        id: '',\n        name: 'khoa',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSingedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSingedIn: isSingedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Khoa/Documents/face-reg-brain/src/App.js"],"names":["Particles","Navigation","Logo","ImageLinkForm","Rank","Signin","Register","FaceRecognition","React","Component","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","catch","err","onRouteChange","route","isSingedIn","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport React, {Component} from 'react';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n apiKey: '14959ae3c99746898e2df219747819c0'\n});\n\nconst particlesOptions = {\n    particles: {\n      number:{\n        value: 30,\n        density: {\n          enable: true,\n          value_area: 300\n        }\n      }\n    }\n}\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSingedIn: false,\n      user: {\n        id: '',\n        name: 'khoa',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data)=>{\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) =>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) =>{\n    console.log(box);\n    this.setState({box: box});\n  }\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () =>{\n    this.setState({imageUrl: this.state.input});\n\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response => {\n      if (response){\n        fetch('http://locahost:3000/image', {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n        })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState({\n          user: {\n            entries: count\n          }\n        })\n      })\n    }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) =>{\n    if (route === 'signout'){\n      this.setState({isSingedIn: false});\n    }else if(route === 'home'){\n      this.setState({isSingedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSingedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n          <Particles\n              className = 'particles'\n              params={particlesOptions}\n          />\n          <Navigation isSingedIn={isSingedIn} onRouteChange={this.onRouteChange}/>\n          {\n            route === 'home'\n            ? <div>\n                <Logo/>\n                <Rank\n                  name={this.state.user.name}\n                  entries={this.state.user.entries}\n                />\n                <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}/>\n                <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n            :(\n              route === 'signin'\n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n          }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}